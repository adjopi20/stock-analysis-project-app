/* You can add global styles to this file, and also import other style files */
@use "../node_modules/bulma/sass/utilities/initial-variables.scss" as iv;
@use "../node_modules/bulma/sass/utilities/mixins.scss" as mx;
@use "../node_modules/bulma/sass/themes/light.scss" as light;
@use "../node_modules/bulma/sass/themes/dark.scss" as dark;
@use "../node_modules/bulma/sass/utilities/css-variables.scss" as cv;


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
@import "https://cdn.jsdelivr.net/npm/bulma@1.0.1/css/bulma.min.css";
@import "../node_modules/bulma/bulma.scss";
@import "../node_modules/@fortawesome/fontawesome-free/css/all.min.css";
// @import "node_modules/bulma-carousel/dist/css/bulma-carousel.min.css";


$container-offset: 2 * iv.$gap !default;
$container-max-width: iv.$fullhd !default;

// container responsiveness
.#{iv.$class-prefix}container {
  flex-grow: 1;
  margin: 0 auto;
  position: relative;
  width: 100%;

  &.#{iv.$class-prefix}is-fluid {
    max-width: none !important;
    padding-left: iv.$gap;
    padding-right: iv.$gap;
    width: 100%;
  }

  @include mx.desktop {
    max-width: iv.$desktop - $container-offset;
  }

  @include mx.until-widescreen {
    &.#{iv.$class-prefix}is-widescreen:not(.#{iv.$class-prefix}is-max-desktop) {
      max-width: min(iv.$widescreen, $container-max-width) - $container-offset;
    }
  }

  @include mx.until-fullhd {
    &.#{iv.$class-prefix}is-fullhd:not(.#{iv.$class-prefix}is-max-desktop):not(
        .#{iv.$class-prefix}is-max-widescreen
      ) {
      max-width: min(iv.$fullhd, $container-max-width) - $container-offset;
    }
  }

  @include mx.widescreen {
    &:not(.#{iv.$class-prefix}is-max-desktop) {
      max-width: min(iv.$widescreen, $container-max-width) - $container-offset;
    }
  }

  @include mx.fullhd {
    &:not(.#{iv.$class-prefix}is-max-desktop):not(
        .#{iv.$class-prefix}is-max-widescreen
      ) {
      max-width: min(iv.$fullhd, $container-max-width) - $container-offset;
    }
  }
}

.pagination-link.is-current {
    background-color: hsl(171, 100%, 41%)	; /* Change this to your desired color */
    color: #000; /* Change this to your desired text color */
    border-color: black	; /* Change this to match the background color if you want */
  }

.card{
    // $custom-card-shadow-color: hsl(171, 100%, 41%); // Change this to your desired shadow color
    // $card-shadow: 0 1px 200px $custom-card-shadow-color !default;
    $card-header-padding: 5rem 5rem;
}

.num-input{
    width: flex;
}

.num-readonly{
    width: flex;
}

.hovered-class{
    background-color: hsl(276, 100%, 55%)	;
    color: #000;
}

:root {
  --monkey-primary-00: #08221e; /* Replace with your desired color */
  --monkey-primary-01: #0ac497;
  --monkey-primary-02: #a5236e;
  --monkey-primary-03: #0a92c4;
  --monkey-primary-04: #eabfb9;
  --monkey-secondary-01: #bbf1ff;
  --primeng-color: #007bff;



  --light: #d8dbe0;
  --dark: #28292c;
  --link: rgb(27, 129, 112);
  --link-hover: rgb(24, 94, 82);

  
}

.custom-hero {  
  background-color: var(--monkey-primary-00);
}

.filter-button{
  &.monkey-01{
    background-color: black;
    color: white;
  }
  &.monkey-01-active{
    background-color: var(--monkey-primary-01);
    color: #000;
  }  
}

.fil-notif{
  background-color: var(--monkey-primary-00)	;
  color: #000;
}

@media (prefers-color-scheme: light) {
  :root{
      @include light.light-theme;
    
  }
}
@media (prefers-color-scheme: dark) {
  :root {
    @include dark.dark-theme;
  }
}

[data-theme=light],
.theme-light {
  @include light.light-theme;
}

[data-theme=dark],
.theme-dark {
  @include dark.dark-theme;
}

hr.new1 {
  border-top: 1px solid var(--monkey-primary-01);
}

.vr.new1 {
  border-left: 2px solid var(--monkey-primary-01); /* Adjust thickness and color */
  height: 100%; /* Full height of the container */
  margin-right: 8px; /* Space between the vertical line and text */
}

.is-align-items-center {
  align-items: center;
}
// /* Order */
// @layer reset, primeng;

// /* Reset CSS */
// @layerreset {
//     button,
//     input {
//         /* CSS to Reset */
//     }
// }
  